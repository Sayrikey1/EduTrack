# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint & Format check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black==23.9.1 flake8==6.0.0

      - name: Check formatting with Black
        run: |
          black --check .

      - name: Run Flake8
        run: |
          flake8 .

  test:
    name: Run Django Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: edutrack_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7
        ports:
          - 6379:6379
    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: edutrack_test
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      REDIS_URL: redis://localhost:6379
      DJANGO_SETTINGS_MODULE: core.settings.dev

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres
        run: |
          until pg_isready -h $DB_HOST -p $DB_PORT; do
            echo "Waiting for Postgres..."
            sleep 1
          done

      - name: Run migrations & tests
        run: |
          python manage.py migrate --noinput
          python manage.py test --verbosity=2

  docker-build:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@v4

      - name: Build and tag Docker image
        run: |
          docker build -t edutrack:ci .

      - name: (Optional) Push to GitHub Container Registry
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | \
            docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker tag edutrack:ci ghcr.io/${{ github.repository_owner }}/edutrack:latest
          docker push ghcr.io/${{ github.repository_owner }}/edutrack:latest
